(()=>{"use strict";class t{constructor(t,e,s){this.id=t,this.description=e,this.dueDate=s?""===s?null:new Date(s):null,this.element=document.createElement("li"),this.element.id=t,this.element.className="task-list";const i=document.importNode(document.getElementById("task-item-template").content,!0);i.getElementById("task-item-description").textContent=e;const n=null===this.dueDate?"":`Due for: ${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][this.dueDate.getDay()]}, ${this.dueDate.getDate()} ${["January","February","March","April","May","June","July","August","September","October","November","December"][this.dueDate.getMonth()]} ${this.dueDate.getFullYear()}`;i.getElementById("task-item-due-date").textContent=n,this.element.append(i);for(const t of this.element.querySelectorAll("button"))t.className="btn list-btn";this.element.querySelector("button:first-of-type").addEventListener("click",this.switchButtonHandler.bind(this)),this.element.querySelector("button:last-of-type").addEventListener("click",this.discardButtonHandler.bind(this))}setSwitchButtonText(t){this.element.querySelector("button:first-of-type").textContent=t}setSwitchFunction(t){this.switchFunction=t}setDeleteFunction(t){this.deletionFunction=t}switchButtonHandler(){this.switchFunction(this.id)}discardButtonHandler(){this.deletionFunction(this.id)}}class e{static moveElement(t,e){document.getElementById(e).append(t)}static clearEventListeners(t){const e=t.cloneNode(!0);return t.replaceWith(e),e}}class s{tasks=[];constructor(t){this.type=t}fetchTasks(){console.log(`Fetching tasks for the ${this.type} list...`);let e=JSON.parse(localStorage.getItem(`${this.type}-list`));if(console.log(e),e){console.log(`${e.length} previous tasks found for the ${this.type} list`);for(const s of e)this.addTask(new t(s.id,s.description,s.dueDate),!1)}else console.log(`No previous tasks found for the ${this.type} list`)}addTask(t,s=!0){t.setSwitchButtonText("done"===this.type?"Activate":"Complete"),e.moveElement(t.element,`${this.type}-list`),t.setSwitchFunction(this.switchTask.bind(this)),t.setDeleteFunction(this.deleteTask.bind(this)),this.tasks.push(t),s&&this.storeList()}deleteTask(t){const e=this.tasks.find((e=>e.id===t)),s=this.tasks.findIndex((e=>e.id===t));e.element.remove(),this.tasks.splice(s,1),this.storeList()}setSwitchList(t){this.switchList=t}switchTask(t){const e=this.tasks.find((e=>e.id===t)),s=this.tasks.findIndex((e=>e.id===t));this.tasks.splice(s,1),this.switchList.addTask(e),this.storeList()}storeList(){console.log(`Updating stored list for the ${this.type} list`);let t=[];for(const e of this.tasks)t.push({id:e.id,description:e.description,dueDate:e.dueDate});localStorage.setItem(`${this.type}-list`,JSON.stringify(t))}}const i=document.getElementById("new-task-modal"),n=document.getElementById("new-task-btn"),o=document.getElementById("new-task-modal").querySelector("button:first-of-type"),d=document.getElementById("new-task-modal").querySelector("button:last-of-type"),l=new s("todo"),a=new s("done"),c=document.getElementById("task-description-input");let u=0;function r(){"none"===i.style.display?(i.style.display="block",n.style.display="none",c.focus()):(i.style.display="none",n.style.display="block")}function h(){r(),o.addEventListener("click",y),d.addEventListener("click",p),document.body.addEventListener("keydown",m)}function m(t){"Enter"===t.code?y():"Escape"===t.code&&p()}function y(){const e=c.value,s=document.getElementById("task-due-date-input").value;e?(l.addTask(new t("task-item-"+u++,e,s)),k()):alert("Please enter a valid description.")}function p(){o.removeEventListener("click",y),d.removeEventListener("click",p),document.body.removeEventListener("keydown",m),k(),r()}function k(){c.value="",document.getElementById("task-due-date-input").value=""}(class{static init(){l.setSwitchList(a),a.setSwitchList(l),l.fetchTasks(),a.fetchTasks(),n.addEventListener("click",h)}}).init()})();